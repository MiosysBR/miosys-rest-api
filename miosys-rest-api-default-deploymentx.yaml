apiVersion: apps/v1
kind: Deployment
metadata:
  name: miosys-rest-api-default-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miosys-rest-api-default-microservice
  template:
    metadata:
      labels:
        app: miosys-rest-api-default-microservice
    spec:
      imagePullSecrets:
      - name: gitlab-registry-secret
      volumes:
      - name: cloud-sql-client-secret-volume
        secret:
          secretName: cloud-sql-client-secret
      containers:
      - name: miosys-rest-api-default
        image: registry.gitlab.com/miosysbr/miosys-rest-api-default:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "default"
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL Auth Proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
        args:
          # Enable structured logging with LogEntry format:
          - "--structured-logs"

          # Replace DB_PORT with the port the proxy should listen on
          - "--port=5432"
          - "miosys:southamerica-west1:miosys-db" # <INSTANCE_CONNECTION_NAME>

          # This flag specifies where the service account key can be found
          - "--credentials-file=/secrets/cloud_sql_client_key.json"
        
        securityContext:
          # The default Cloud SQL Auth Proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: cloud-sql-client-secret-volume
          mountPath: /secrets/
          readOnly: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "2Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"  
---
apiVersion: v1
kind: Service
metadata:
  name: miosys-rest-api-default-service
  namespace: default
  annotations:
    cloud.google.com/neg: '{"exposed_ports": {"8080":{}}}'
spec:
  selector:
    app: miosys-rest-api-default-microservice
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: miosys-rest-api-default-service-healthcheck
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        port: 8080
        requestPath: /actuator/health
  targetRef:
    group: ""
    kind: Service
    name: miosys-rest-api-default-service
